{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment.dev\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    GetAllPendingUsers() {\n      let url = environment.baseURL + environment.User.AllVerifiedUser;\n      const headers = {\n        \"content-type\": \"application/json\"\n      };\n      return this.http.get(url, {\n        headers: headers\n      });\n    }\n\n    GetActiveUSers(searchText = \"\", gender = 3, createdFor = 7, religion = \"\", caste = \"\", motherTongue = \"\", country = \"\", state = \"\", location = \"\", createdFrom = \"\", createdTo = \"\") {\n      var url = environment.baseURL + `users/admin/appUsers?isVerified=1${searchText.length > 0 ? `&displayId=${searchText}` : \"\"}${gender !== 3 ? `&gender=${gender}` : \"\"}\n  ${location.length > 0 ? `&location=${location}` : \"\"}${createdFor !== 7 ? `&relationship=${createdFor}` : \"\"}\n  ${religion.length > 0 ? `&religion=${religion}` : \"\"}${caste.length > 0 ? `&cast=${caste}` : \"\"}${motherTongue.length > 0 ? `&motherTongue=${motherTongue}` : \"\"}\n  ${country.length > 0 ? `&country=${country}` : \"\"}${state.length > 0 ? `&state=${state}` : \"\"}${createdFrom.length > 0 ? `&startDate=${createdFrom}` : \"\"}${createdTo.length > 0 ? `&endDate=${createdTo}` : \"\"}`.replace(\"%20 \", \"\").replace(\"\\n\", \"\");\n      const headers = {\n        \"content-type\": \"application/json\"\n      };\n      return this.http.get(url, {\n        headers: headers\n      });\n    }\n\n    GetUserProfile(id) {\n      let url = environment.baseURL + \"users/basic/\" + id;\n      const headers = {\n        \"content-type\": \"application/json\"\n      };\n      return this.http.get(url, {\n        headers: headers\n      });\n    }\n\n    VerifyUser(id) {\n      let url = environment.baseURL + \"users/admin/verify/\" + id;\n      const headers = {\n        \"content-type\": \"application/json\"\n      };\n      return this.http.get(url, {\n        headers: headers\n      });\n    }\n\n    RejectUser(id) {\n      let url = environment.baseURL + \"users/admin/rejct/\" + id;\n      const headers = {\n        \"content-type\": \"application/json\"\n      };\n      return this.http.get(url, {\n        headers: headers\n      });\n    }\n\n    loggedIn() {\n      return localStorage.getItem(\"token\");\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: \"root\"\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}